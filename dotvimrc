set nocompatible
set noswapfile
set enc=utf-8  " UTF-8 Default encoding
set history=9000
set ruler
set rulerformat=%l:%c ruler " Display current column/line
set ignorecase
set smartcase
set incsearch
set hlsearch
set backspace=indent,eol,start
set scrolloff=6
set laststatus=2
noremap <space> :
set whichwrap=h,l,~,[,]

" u for undo, U for redo
nnoremap U <c-r>

set timeoutlen=1000 ttimeoutlen=0 " remove <esc> delay from insert mode

" training :)
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

"filetype off
"set rtp+=~/.vim/bundle/vundle/
"call vundle#rc()
"Bundle 'gmarik/vundle'
"Bundle 'christoomey/vim-tmux-navigator'
"filetype on

execute pathogen#infect()
filetype plugin on          " enables filetype
filetype plugin indent on
filetype indent on

syntax enable
set background=dark
colorscheme solarized

set ttyfast
set lazyredraw              " Don't update while in macro
set autoindent              " auto indent
" set smartindent " might be annoying...
set expandtab               " expand tabs to spaces
set tabstop=4
set softtabstop=4
set shiftwidth=4
set smarttab                " tab and backspace are smart
autocmd BufNewFile,BufReadPost *.coffee setl shiftwidth=2

noremap - :nohls<cr>
map Y y$

nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
cnoremap <C-A> <Home>
cnoremap <C-E> <End>

set magic
" make /, ?, s/ (and %s/) very magic
" :nnoremap / /\v
" :nnoremap ? ?\v
" :cnoremap %s/ %s/\v
" :ca ss %s/\v

" Set > and < to not use operator-pending mode
" noremap > >>
" noremap < <<

" trim whitespace on save
autocmd BufWritePre * :%s/\s\+$//e

set textwidth=0
set wrap
set number
set titlestring=%f title    " Display filename in terminal window
set showcmd                 " Show commands at bottom right
set showmatch               " Show matching brackets.

if has("wildmenu")
    "set wildmode=full wildmenu " command-line tab completion
    "set completeopt=longest,menu,menuone
    set wildmenu
    set wildmode=longest:list,full
    set wildignore+=*.a,*.o
    set wildignore+=*.bmp,*.gif,*.ico,*.jpg,*.png
    set wildignore+=.DS_Store,.git,.hg,.svn
    set wildignore+=*~,*.swp,*.tmp
    set infercase
endif

" Make sure that unsaved buffers that are to be put in the background are
" allowed to go in there (ie. the "must save first" error doesn't come up)
set hidden

" Show the current mode
set showmode

" Disable syntax highlight for files larger than 50 MB
autocmd BufWinEnter * if line2byte(line("$") + 1) > 50000000 | syntax clear | endif

augroup vimrc_autocmds
  " highlight everything that's past the 100 character mark
  autocmd BufEnter,WinEnter * highlight OverLength ctermbg=236 guibg=#592929
  autocmd BufEnter,WinEnter * let w:m1=matchadd('OverLength', '\%>100v.\+', -1)
  autocmd BufEnter,WinEnter * highlight ExtraWhitespace ctermbg=red guibg=red

  " highlight whitespace at the end of lines
  " autocmd BufEnter,WinEnter * let w:m2=matchadd('ExtraWhitespace', '\s\+$', -1)
  " highlight tabs
  autocmd BufEnter,WinEnter * let w:m3=matchadd('ExtraWhitespace', '\t\+', -1)
augroup END

" http://ctrlpvim.github.io/ctrlp.vim
set runtimepath^=~/.vim/bundle/ctrlp.vim

" trigger an ag search via new 'K' mode
" this needs maintenance: current ag vim extension is deprecated.
" see: https://github.com/rking/ag.vim
"
"nnoremap K :Ag "\b<C-R><C-W>\b"<CR>:cw<CR>
"au FileType qf call AdjustWindowHeight(3, 20)
"function! AdjustWindowHeight(minheight, maxheight)
"   let l = 1
"   let n_lines = 0
"   let w_width = winwidth(0)
"   while l <= line('$')
"       " number to float for division
"       let l_len = strlen(getline(l)) + 0.0
"       let line_width = l_len/w_width
"       let n_lines += float2nr(ceil(line_width))
"       let l += 1
"   endw
"   exe max([min([n_lines, a:maxheight]), a:minheight]) . "wincmd _"
"endfunction
